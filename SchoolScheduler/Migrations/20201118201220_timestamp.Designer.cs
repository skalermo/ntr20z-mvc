// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SchoolScheduler.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20201118201220_timestamp")]
    partial class timestamp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SchoolScheduler.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassGroupId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ClassGroupId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SlotId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            ClassGroupId = 1,
                            RoomId = 1,
                            SlotId = 1,
                            SubjectId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            ActivityId = 2,
                            ClassGroupId = 3,
                            RoomId = 4,
                            SlotId = 3,
                            SubjectId = 3,
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.ClassGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("Id");

                    b.ToTable("ClassGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1a"
                        },
                        new
                        {
                            Id = 2,
                            Name = "1b"
                        },
                        new
                        {
                            Id = 3,
                            Name = "1c"
                        },
                        new
                        {
                            Id = 4,
                            Name = "2a"
                        },
                        new
                        {
                            Id = 5,
                            Name = "2b"
                        },
                        new
                        {
                            Id = 6,
                            Name = "3a"
                        },
                        new
                        {
                            Id = 7,
                            Name = "3b"
                        },
                        new
                        {
                            Id = 8,
                            Name = "4a"
                        },
                        new
                        {
                            Id = 9,
                            Name = "4b"
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "110"
                        },
                        new
                        {
                            Id = 2,
                            Name = "111"
                        },
                        new
                        {
                            Id = 3,
                            Name = "120"
                        },
                        new
                        {
                            Id = 4,
                            Name = "121"
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.Slot", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("SlotId");

                    b.ToTable("Slots");

                    b.HasData(
                        new
                        {
                            SlotId = 1,
                            Name = "Mo 8:00-8:45"
                        },
                        new
                        {
                            SlotId = 2,
                            Name = "Tu 8:00-8:45"
                        },
                        new
                        {
                            SlotId = 3,
                            Name = "We 8:00-8:45"
                        },
                        new
                        {
                            SlotId = 4,
                            Name = "Th 8:00-8:45"
                        },
                        new
                        {
                            SlotId = 5,
                            Name = "Fr 8:00-8:45"
                        },
                        new
                        {
                            SlotId = 6,
                            Name = "Mo 8:55-9:40"
                        },
                        new
                        {
                            SlotId = 7,
                            Name = "Tu 8:55-9:40"
                        },
                        new
                        {
                            SlotId = 8,
                            Name = "We 8:55-9:40"
                        },
                        new
                        {
                            SlotId = 9,
                            Name = "Th 8:55-9:40"
                        },
                        new
                        {
                            SlotId = 10,
                            Name = "Fr 8:55-9:40"
                        },
                        new
                        {
                            SlotId = 11,
                            Name = "Mo 9:50-11:35"
                        },
                        new
                        {
                            SlotId = 12,
                            Name = "Tu 9:50-11:35"
                        },
                        new
                        {
                            SlotId = 13,
                            Name = "We 9:50-11:35"
                        },
                        new
                        {
                            SlotId = 14,
                            Name = "Th 9:50-11:35"
                        },
                        new
                        {
                            SlotId = 15,
                            Name = "Fr 9:50-11:35"
                        },
                        new
                        {
                            SlotId = 16,
                            Name = "Mo 11:55-12:40"
                        },
                        new
                        {
                            SlotId = 17,
                            Name = "Tu 11:55-12:40"
                        },
                        new
                        {
                            SlotId = 18,
                            Name = "We 11:55-12:40"
                        },
                        new
                        {
                            SlotId = 19,
                            Name = "Th 11:55-12:40"
                        },
                        new
                        {
                            SlotId = 20,
                            Name = "Fr 11:55-12:40"
                        },
                        new
                        {
                            SlotId = 21,
                            Name = "Mo 12:50-13:55"
                        },
                        new
                        {
                            SlotId = 22,
                            Name = "Tu 12:50-13:55"
                        },
                        new
                        {
                            SlotId = 23,
                            Name = "We 12:50-13:55"
                        },
                        new
                        {
                            SlotId = 24,
                            Name = "Th 12:50-13:55"
                        },
                        new
                        {
                            SlotId = 25,
                            Name = "Fr 12:50-13:55"
                        },
                        new
                        {
                            SlotId = 26,
                            Name = "Mo 13:45-14:30"
                        },
                        new
                        {
                            SlotId = 27,
                            Name = "Tu 13:45-14:30"
                        },
                        new
                        {
                            SlotId = 28,
                            Name = "We 13:45-14:30"
                        },
                        new
                        {
                            SlotId = 29,
                            Name = "Th 13:45-14:30"
                        },
                        new
                        {
                            SlotId = 30,
                            Name = "Fr 13:45-14:30"
                        },
                        new
                        {
                            SlotId = 31,
                            Name = "Mo 14:40-15:25"
                        },
                        new
                        {
                            SlotId = 32,
                            Name = "Tu 14:40-15:25"
                        },
                        new
                        {
                            SlotId = 33,
                            Name = "We 14:40-15:25"
                        },
                        new
                        {
                            SlotId = 34,
                            Name = "Th 14:40-15:25"
                        },
                        new
                        {
                            SlotId = 35,
                            Name = "Fr 14:40-15:25"
                        },
                        new
                        {
                            SlotId = 36,
                            Name = "Mo 15:35-16:20"
                        },
                        new
                        {
                            SlotId = 37,
                            Name = "Tu 15:35-16:20"
                        },
                        new
                        {
                            SlotId = 38,
                            Name = "We 15:35-16:20"
                        },
                        new
                        {
                            SlotId = 39,
                            Name = "Th 15:35-16:20"
                        },
                        new
                        {
                            SlotId = 40,
                            Name = "Fr 15:35-16:20"
                        },
                        new
                        {
                            SlotId = 41,
                            Name = "Mo 16:30-17:15"
                        },
                        new
                        {
                            SlotId = 42,
                            Name = "Tu 16:30-17:15"
                        },
                        new
                        {
                            SlotId = 43,
                            Name = "We 16:30-17:15"
                        },
                        new
                        {
                            SlotId = 44,
                            Name = "Th 16:30-17:15"
                        },
                        new
                        {
                            SlotId = 45,
                            Name = "Fr 16:30-17:15"
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "mat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "geo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "eng"
                        },
                        new
                        {
                            Id = 4,
                            Name = "phys"
                        },
                        new
                        {
                            Id = 5,
                            Name = "biol"
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "kowalski"
                        },
                        new
                        {
                            Id = 2,
                            Name = "nowak"
                        },
                        new
                        {
                            Id = 3,
                            Name = "smith"
                        },
                        new
                        {
                            Id = 4,
                            Name = "clarkson"
                        },
                        new
                        {
                            Id = 5,
                            Name = "may"
                        },
                        new
                        {
                            Id = 6,
                            Name = "hammond"
                        },
                        new
                        {
                            Id = 7,
                            Name = "atkinson"
                        });
                });

            modelBuilder.Entity("SchoolScheduler.Models.Activity", b =>
                {
                    b.HasOne("SchoolScheduler.Models.ClassGroup", "ClassGroup")
                        .WithMany("Activities")
                        .HasForeignKey("ClassGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolScheduler.Models.Room", "Room")
                        .WithMany("Activities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolScheduler.Models.Slot", "Slot")
                        .WithMany("Activities")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolScheduler.Models.Subject", "Subject")
                        .WithMany("Activities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolScheduler.Models.Teacher", "Teacher")
                        .WithMany("Activities")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
